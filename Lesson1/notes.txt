Seguimos trabajando con Git.

Branching en git: permite llevar al proyecto por distintos caminos
Muy util cuando queremos implementar un new feature

Merging prermite unir branches.

El branch original es el MASTER.

Para GIT el HEAD indica en qué rama estamos actualmente.
Para movernos de rama podemos cambiar el HEAD de rama (branch) haciendo un
vistazo (checkout)

git branch -> muestra un listado de las ramas que tiene actualmente mi repositorio
git branch <nombreNuevaRama> -> crea una nueva rama
Cuando creamos una nueva rama ésta existe sólo de forma local. No 
existirá en GitHub a menos que hagamos un PUSH

git checkout <nomRama> -> mueve el HEAD (me posiciona) a otra rama

git merge <nomRama> -> combina la rama indicada con la que estemos parados actualmente


FUNCIONAMIENTO DEL GIT PULL (fetch + merge)
Git Remotes: repositorios que no son locales
Puede ocurrir que la rama MASTER de un repositorio esté más
actualizada que la rama master local de mi PC. En ese caso 
es útil ejecutar el comando "git fetch" para traer la cadena completa
de la rama actual desde el repositorio remoto hasta mi pc y si queremos
combinar nuestra rama con la del remoto corremos el comando 
git merge origin/nom_rama
Ejemplo con master...
    remoto  --- **-**-**-**-**Master_r
    local   --- **-**-Master_l
    
    git fetch
    remoto  --- **-**-**-**-**Master_r
    local   --- **-**-Master_l-**-**Master_r
    
    git merge origin/master
    remoto  --- **-**-**-**-**Master_r
    local   --- **-**-**-**-**Master_l

Git FORKS: copia de un repositorio completo y crea uno nuevo
con el contenido de otro original.

HTML5 introduce nuevas etiquetas: header, nav, main, footer, section, audio, video, datalist

Las sudo class permiten modificar apariencia de los elementos HTML
cuando ciertos eventos ocurren
Los sudo elements permiten alterar pequeñas partes de un elemento

Tipos de selectores CSS:
    X, Y    -> cambios aplican para X y para Y 
    X Y     -> cambios aplican para todo Y que tenga X como padre
    X > Y   -> cambios aplican para todo Y que sea HIJO DIRECTO de X
    X + Y   -> cambios afectan al primer Y que esté luego de X, si es que hay uno.
    X ~ Y   -> cambios afectan a TODO Y que venga luego de un X
    [X=Y]   -> cambios afectan a todo atributo X que tenga valor Y
    X:Y     -> cambios afectan a las pseudocalses de los elementos html
    X::Y    -> cambios afectan a los pseudoelementos de los elementos html

    Responsive Design: refiere a cómo hacer que nuestra página se adapte a la pantalla
    donde está siendo vista.

    media-queries permiten aplicar reglas CSS dependiendo de las características de la pantalla del equipo
    que esté abriendo la página.

    SCSS es una extensión de css.
    Usamos archivos .scss para definir variables al estilo php, es decir, usando $ antes del nombre 
    de la variable
    Necesitamos adaptar los archviso scss para que puedan ser leidos por un navegador como css.
    Para hacer esto podemos usar el programa "sass" y ejecutar el comando
    "sass archivo.scss archivo.css"
    Cada vez que hagamos un cambio en un archivo .scss hay que recompilarlo
    Esto deberia ser así a menos que hagamos un seguimiento entre dos archivos.
    Lo haccemos con el comando: sass --watch archivo.scss:archivo.css

    Los archivos SCSS permiten declarar selectores dentro de otros. Esto permite 
    controlar mejor los cambios de vistas de cada elementos, diferenciando los que 
    están dentro de otros.

    Herencia en CSS
    